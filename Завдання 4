using System;

namespace Hangman
{
    class Program
    {
        static float[,] getMatrix(int rowCount)
        {
            float[,] arr = new float[rowCount, rowCount];
            Random rand = new Random(DateTime.Now.Millisecond);
            for (int i = 0; i < arr.GetLength(0); i++)
            {
                for (int j = 0; j < arr.GetLength(1); j++)
                {
                    arr[i, j] = rand.Next(-10, 20);
                }
            }
            return arr;
        }
       
        static void printMatrix(float[,] arr)
        {
            for (int i = 0; i < arr.GetLength(0); i++) 
            {
                for (int j = 0; j < arr.GetLength(1); j++) 
                {
                    Console.Write("{0,7:f}  ", arr[i, j]);
                }
                Console.WriteLine();
            }
        }
        static float[,] sortRowMatr(float[,] matr, int row)
        {
            for (int j = 0; j < matr.GetLength(0) - 1; j++)
            {
                
                int indexMax = j;
                for (int i = j + 1; i < matr.GetLength(0); i++)
                {
                    if (matr[i, row] > matr[indexMax, row])
                        indexMax = i;
                }
                
                if (j != indexMax)
                {
                    float z = matr[j, row];
                    matr[j, row] = matr[indexMax, row];
                    matr[indexMax, row] = z;
                }
            }
            return matr;
        }

        static float[,] sortRows(float[,] matr)
        {
            for (int i = 1; i < matr.GetLength(1); i += 2)
            {
                sortRowMatr(matr, i );
            }
            return matr;
        }
        static void Main(string[] args)
        {
            Console.Write("Кількість рядків та стовбців: ");
            int r = Convert.ToInt32(Console.ReadLine());
            float[,] matrix = getMatrix(r);
            printMatrix(matrix);
            Console.WriteLine("Посортована матриця");
            float[,] sortedMatr = sortRows(matrix);
            printMatrix(sortedMatr);
        }
    }
}
